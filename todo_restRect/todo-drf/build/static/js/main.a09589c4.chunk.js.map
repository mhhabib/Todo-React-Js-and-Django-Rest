{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","todoList","activeItem","id","title","completed","editing","fetchtask","bind","handleChange","handleSubmit","getCookie","startEdit","deleteItem","strikeUnstrike","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","this","fetch","then","response","json","data","setState","e","target","value","console","log","preventDefault","csrftoken","url","method","headers","body","JSON","stringify","catch","error","task","self","className","onSubmit","style","flex","onChange","type","placeholder","map","index","onClick","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a09589c4.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      todoList: [],\n      activeItem: {\n        id: null,\n        title: '',\n        completed:false,\n      },\n      editing: false,\n    };\n    this.fetchtask = this.fetchtask.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.getCookie = this.getCookie.bind(this);\n    this.startEdit = this.startEdit.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.strikeUnstrike = this.strikeUnstrike.bind(this);\n  }\n   getCookie(name) {\n        var cookieValue = null;\n        if (document.cookie && document.cookie !== '') {\n            var cookies = document.cookie.split(';');\n            for (var i = 0; i < cookies.length; i++) {\n                var cookie = cookies[i].trim();\n                // Does this cookie string begin with the name we want?\n                if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                    break;\n                }\n            }\n        }\n        return cookieValue;\n    }\n  componentWillMount(){\n    this.fetchtask()\n  }\n  fetchtask() {\n    fetch('http://127.0.0.1:8000/api/task-list/')\n      .then(response => response.json())\n      .then(data => this.setState({\n        todoList:data\n      }))\n  }\n  handleChange(e) {\n    var name=e.target.name\n    var value = e.target.value\n    console.log('Name: ', name)\n    console.log('value: ',value)\n    this.setState({\n      activeItem: {\n        ...this.state.activeItem,\n        title:value\n      }\n    })\n  }\n  handleSubmit(e) {\n    e.preventDefault()\n    console.log('Result: ', this.state.activeItem)\n    var csrftoken=this.getCookie('csrftoken')\n    var url = 'http://127.0.0.1:8000/api/task-create/'\n    if (this.state.editing === true) {\n      url = `http://127.0.0.1:8000/api/task-update/${ this.state.activeItem.id }/`\n      this.setState({\n        editing:false\n      })\n    }\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        'X-CSRFToken':csrftoken,\n      },\n      body:JSON.stringify(this.state.activeItem)\n    }).then((response) => {\n      this.fetchtask()\n      this.setState({\n        activeItem: {\n          id: null,\n          title: '',\n          completed:false,\n        }\n      })\n    }).catch(function (error) {\n      console.log('ERROR: ',console)\n    })\n  }\n  startEdit(task) {\n    this.setState({\n      activeItem: task,\n      editing:true,\n    })\n  }\n  deleteItem(task) {\n    var csrftoken = this.getCookie('csrftoken')\n    fetch(`http://127.0.0.1:8000/api/task-delete/${task.id}/`, {\n      method: 'DELETE',\n      headers: {\n        'Content-type': 'application/json',\n        'X-CSRFToken':csrftoken,\n      }\n    }).then((response) => {\n      this.fetchtask()\n    })\n    \n  }\n\n  strikeUnstrike(task){\n    task.completed = !task.completed\n    var csrftoken = this.getCookie('csrftoken')\n    var url = `http://127.0.0.1:8000/api/task-update/${task.id}/`\n    fetch(url, {\n        method:'POST',\n        headers:{\n          'Content-type':'application/json',\n          'X-CSRFToken':csrftoken,\n        },\n        body:JSON.stringify({'completed': task.completed, 'title':task.title})\n      }).then(() => {\n        this.fetchtask()\n      })\n  }\n  render() {\n    var task = this.state.todoList\n    var self=this\n    return (\n      <div className=\"container\">\n          <div id=\"task-container\">\n            <div id=\"form-wrapper\">\n              <form onSubmit={this.handleSubmit} id=\"form\">\n                <div className=\"flex-wrapper\">\n                    <div style={{flex: 6}}>\n                        <input onChange={this.handleChange} className=\"form-control\" id=\"title\" value={this.state.activeItem.title} type=\"text\" name=\"title\" placeholder=\"Add task...\" />\n                    </div>\n                    <div style={{flex: 1}}>\n                      <input id=\"submit\" className=\"btn btn-warning\" type=\"submit\" name=\"Add\" />\n                    </div>\n                </div>\n            </form>\n          </div>\n          <div id=\"list-wrapper\">   \n            {task.map(function (task, index) {\n              return (\n                <div key={index} className=\"task-wrapper flex-wrapper\">\n                  <div onClick={()=>self.strikeUnstrike(task)} style={{ flex: 6 }}>\n                    {task.completed===false?(<span>{task.title}</span>):(<strike>{task.title}</strike>)}\n                  </div>\n                    <div style={{flex: 1}}>\n                      <button onClick={()=>self.startEdit(task)} className=\"btn btn-outline-info btn-sm\">Edit</button>\n                  </div>\n                  <div style={{flex: 1}}>\n                      <button onClick={()=>self.deleteItem(task)} className=\"btn btn-outline-danger btn-sm\">Delete</button>\n                  </div>\n                </div>\n              )\n            })}  \n          </div>\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}